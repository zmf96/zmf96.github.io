import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,e}from"./app-CXiloG2g.js";const n="/assets/003-01-CRgN2CdC.png",t={},l=e('<h1 id="packetbeat" tabindex="-1"><a class="header-anchor" href="#packetbeat"><span>packetbeat</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>Packetbeat 是一款能够监测和分析 HTTP、DNS、MySQL 等网络协议的工具，能够将数据发送至 Logstash 或 Elasticsearch。</p><h2 id="流量捕获" tabindex="-1"><a class="header-anchor" href="#流量捕获"><span>流量捕获</span></a></h2><p>使用的是gopacket（libpcap的go语言封装），实现了两种抓包的模式pcap与af_packet。</p><blockquote><p><a href="https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-interfaces.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-interfaces.html</a></p></blockquote><p>相关代码在sniffer目录下</p><figure><img src="'+n+`" alt="003-01" tabindex="0" loading="lazy"><figcaption>003-01</figcaption></figure><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sniffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">    -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Sniffer</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">        -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> New</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">        -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">            -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pollDefaultRoute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">轮询默认路由</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">            -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sniffStatic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">在单个静态接口上执行嗅探工作</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">            -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sniffDynamic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">对来自defaultRoute的动态接口流执行嗅探工作</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sniffOneDynamic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                    -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> openPcap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                    -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> openAFPacket</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> decoders</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sniffHandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                    -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Dumpfile</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> 保存到pcap文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">                    -</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ReadPacketData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() （</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gopacket库的函数</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="decoder" tabindex="-1"><a class="header-anchor" href="#decoder"><span>decoder</span></a></h2><h2 id="protos" tabindex="-1"><a class="header-anchor" href="#protos"><span>protos</span></a></h2><h2 id="整体流程" tabindex="-1"><a class="header-anchor" href="#整体流程"><span>整体流程</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rootCmd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MakeDefaultSupport</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> processors.New</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> newBuilder</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> processorFactory.Create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> processor.Start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> p.sniffer.Run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> beater.New</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> newProcessorFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> processorFactory.Create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setupSniffer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sniffer.New</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),p=[l];function h(k,r){return a(),i("div",null,p)}const o=s(t,[["render",h],["__file","3_packetbeat.html.vue"]]),g=JSON.parse('{"path":"/notebook/go/5_%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/3_packetbeat.html","title":"packetbeat","lang":"zh-CN","frontmatter":{"description":"packetbeat 介绍 Packetbeat 是一款能够监测和分析 HTTP、DNS、MySQL 等网络协议的工具，能够将数据发送至 Logstash 或 Elasticsearch。 流量捕获 使用的是gopacket（libpcap的go语言封装），实现了两种抓包的模式pcap与af_packet。 https://www.elastic.co...","head":[["meta",{"property":"og:url","content":"https://zmf96.github.io/notebook/go/5_%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/3_packetbeat.html"}],["meta",{"property":"og:site_name","content":"小明的笔记本"}],["meta",{"property":"og:title","content":"packetbeat"}],["meta",{"property":"og:description","content":"packetbeat 介绍 Packetbeat 是一款能够监测和分析 HTTP、DNS、MySQL 等网络协议的工具，能够将数据发送至 Logstash 或 Elasticsearch。 流量捕获 使用的是gopacket（libpcap的go语言封装），实现了两种抓包的模式pcap与af_packet。 https://www.elastic.co..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-02T04:05:12.000Z"}],["meta",{"property":"article:author","content":"XiaoMing"}],["meta",{"property":"article:modified_time","content":"2024-08-02T04:05:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"packetbeat\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-02T04:05:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoMing\\",\\"url\\":\\"https://github.com/zmf963\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"流量捕获","slug":"流量捕获","link":"#流量捕获","children":[]},{"level":2,"title":"decoder","slug":"decoder","link":"#decoder","children":[]},{"level":2,"title":"protos","slug":"protos","link":"#protos","children":[]},{"level":2,"title":"整体流程","slug":"整体流程","link":"#整体流程","children":[]}],"git":{"createdTime":1722571512000,"updatedTime":1722571512000,"contributors":[{"name":"one","email":"one@one.com","commits":1}]},"readingTime":{"minutes":0.55,"words":164},"filePathRelative":"notebook/go/5_开源项目/3_packetbeat.md","localizedDate":"2024年8月2日","excerpt":"\\n<h2>介绍</h2>\\n<p>Packetbeat 是一款能够监测和分析 HTTP、DNS、MySQL 等网络协议的工具，能够将数据发送至 Logstash 或 Elasticsearch。</p>\\n<h2>流量捕获</h2>\\n<p>使用的是gopacket（libpcap的go语言封装），实现了两种抓包的模式pcap与af_packet。</p>\\n<blockquote>\\n<p><a href=\\"https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-interfaces.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.elastic.co/guide/en/beats/packetbeat/current/configuration-interfaces.html</a></p>\\n</blockquote>","autoDesc":true}');export{o as comp,g as data};
